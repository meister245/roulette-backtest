#!/usr/bin/env python3

import sys
import argparse
from os.path import dirname, realpath, join

SRC_DIR = realpath(join(dirname(__file__), '..'))
BACKTEST_DIR = realpath(join(dirname(__file__), '..', 'resources', 'backtest'))
STRATEGY_DIR = realpath(join(dirname(__file__), '..', 'resources', 'strategy'))

if __name__ == '__main__':
    sys.path.append(SRC_DIR)
    from app.controller import ServiceController


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--strategy', action='store', type=str, default='sample',
                        metavar='STRATEGY', help='filename for betting strategy')
    parser.add_argument('-m', '--mode', choices=('rng', 'backtest'), default='rng',
                        metavar='MODE', help='test mode')
    parser.add_argument('-b', '--balance', action='store', type=float, default=100.0,
                        metavar='NUMBER', help='starting balance')
    parser.add_argument('--spins', action='store', type=int, default=0,
                        metavar='NUMBER', help='number of roulette spins played')
    parser.add_argument('--backtest', action='store', type=str, default=False,
                        metavar='BACKTEST', help='filename for backtest data')
    parser.add_argument('--upscale', action='store', type=int, default=0,
                        metavar='NUMBER', help='extend backtest sample data spins to given number, \
                            by randomly mixing with other samples')
    parser.add_argument('--backtest-filter', action='store', type=str, default=False,
                        metavar='BACKTEST_FILTER', help='filter processing for backtest files')

    return parser.parse_args()


if __name__ == '__main__':
    service = ServiceController(STRATEGY_DIR, BACKTEST_DIR)

    try:
        args = parse_args()
        service.run_simulation(**vars(args))

    except KeyboardInterrupt:
        sys.exit('process terminated by user')

    except ValueError as e:
        sys.exit(str(e))
